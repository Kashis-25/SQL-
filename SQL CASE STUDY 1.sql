create database casestudy1

-- Question1 - Display the number of states present in theLocationTable
use casestudy1;
go
select top 10 * from Location;
go
select count(distinct state) as Numberofstates
from location;
go
 --2. Howmany products are of regular type?
 use casestudy1;
 go
 select top 10 * from Product;
 go
 select count(*) as TotalRegularproducts
 from Product
 where Type = 'regular';
 go

 --3 How much spending has been done on marketing of product ID 1?
 use casestudy1;
 go
 select sum(marketing) as totalMarketing
 from fact
 where ProductId=1;
 --4. What is the minimum sales of a product?
use casestudy1;
go
select min(sales) as Minimumsalesofaproduct
from fact
--5 Display the max Cost of Good Sold (COGS)
use casestudy1
select MAX(COGS) as maximumgoodsold
from fact
-- 6 Display the details of the product where product type is coffee.
select * 
from Product
where Product_Type ='coffee';
--7 Display the details where total expenses are greater than 40
use casestudy1
select *
from fact
where Total_Expenses>40;
--8 What is the average sales in area code 719?
use casestudy1
select avg(sales) as avgsales
from fact
where Area_Code=719;
-- 9 Find out the total profit generated by Colorado state.
use casestudy1
select sum(profit) as totalprofit
from fact
where 'state' ='colorado';
-- 10 Display the average inventory for each product ID.
use casestudy1
select avg(inventory) As AvgInvent
from fact
group by  ProductId;

-- 11 Display state in a sequential order in a Location Table?
use casestudy1
select distinct state
from Location
order by state;
--12 Display the average budget of the Product where the average budget margin should be greater than 100?
use casestudy1
select avg(Budget_Sales) as avgbudpro from fact 
where [Budget_Margin] > 100;
--13 What is the total sales done on date 2010-01-01?
select sum(sales) as TotalsalesDone
from fact where date ='2010-01-01';
--14 Display the average total expense of each product ID on an individual date.
use casestudy1
select productid, date, avg(Total_Expenses) as TotalExpenseofproduct
from fact group by productid,date;
-- 15 Display the table with the following attributes such as date, productID, product_type, product, sales, profit, state, area_code
use casestudy1
SELECT f.Date, 
       f.ProductID, 
       p.Product_Type AS product_type, 
       p.Product, 
       f.Sales, 
       f.Profit, 
       l.State, 
       f.Area_Code
FROM Fact f
JOIN Product_Table p ON f.ProductID = p.ProductID
JOIN LocationTable l ON f.Area_Code = l.Area_Code;
--16 Display the rank without any gap to show the sales wise rank
select sales, ROW_NUMBER() OVER(ORDER  BY SALES DESC)as rank from fact
--17  Find the state wise profit and sales
use casestudy1
SELECT 
    l.State,
    SUM(f.Profit) AS TotalProfit,
    SUM(f.Sales) AS TotalSales
FROM 
    Fact f
JOIN 
    Location l
ON 
    f.Area Code = l.Area Code
GROUP BY 
    l.State;
	--18  Find the state wise profit and sales along with the productname
SELECT 
    l.State,
    SUM(f.Profit) AS TotalProfit,
    SUM(f.Sales) AS TotalSales,
    p.Product AS ProductName
FROM 
    Fact f
JOIN 
    Product p
ON 
    f.ProductID = p.ProductID
JOIN 
    Location l
ON 
    f.Area_Code = l.Area_Code
GROUP BY 
    l.State,
    p.Product
	--19 If there is an increase in sales of 5%, calculate 
	SELECT
    Date,
    ProductID,
    Profit,
    Sales,
    Margin,
    COGS,
    Total_Expenses,
    Marketing,
    Inventory,
    Budget_Profit,
    Budget_COGS,
    Budget_Margin,
    Budget_Sales,
    Area_Code,
    Sales * 1.05 AS IncreasedSales
FROM 
    Fact;
	-- 20 Find the maximum profit along with the product ID and producttype
	select p.product_type, f.productid,max(f.profit) as Maxprofit from fact f
	join product p on f.productid =p.ProductId group by f.ProductId,p.Product_Type;
	-- 21 Create a stored procedure to fetch the result according to the product type from Product table
	CREATE PROCEDURE GetFact
    @ProductType VARCHAR(50)
AS
BEGIN
    SELECT 
        f.*
    FROM 
        FactTable f
    JOIN 
        ProductTable p ON f.ProductID = p.ProductID
    WHERE 
        p.ProductType = @ProductType;
END;
EXEC GetFact 'YourProductType';
-- 22 Write a query by creating a condition in which if the total expenses is less than 60 then it is a profit or else loss
use casestudy1
select *,
case when Total_Expenses < 60 then 'profit'
else 'loss'
end as profitorloss
from fact;
--23 Give the total weekly sales value with the date and product ID details. Use roll-up to pull the data in hierarchical order?
use casestudy1
select  DATEPART(year,date) as year, DATEPART(week, date) as week, productid, sum(sales) as totalweeklysales from fact
GROUP BY
ROLLUP (DATEPART(year,date),DATEPART(week, date),productid)
ORDER BY 
DATEPART(year,date),
DATEPART(week, date),
productid;
-- 24 Apply union and intersection operator on the tables which consist of attribute area code?
use casestudy1
select Area_Code from fact 
union 
select Area_Code from location

select area_code from fact
intersect 
select area_code from Location
-- 25 Create a user-defined function for the product table to fetch a particular product type based upon the user’s preference
CREATE FUNCTION dbo.GetProductbttype
(
@Producttype VARCHAR(50)
)
Returns Table
AS Return
(
Select[ProductId], [Product_Type], [Product], [Type]
from Product
Where Product_Type=@Producttype
);

-- 26 Change the product type from coffee to tea where product ID is 1 and undo it
use casestudy1
begin transaction;
select product_type, ProductId from Product
update product
set product_type ='tea'
where productid =1;

commit transaction;

begin transaction;
select product_type, ProductId from Product
update product
set product_type ='tea'
where productid =1;

RollBack transaction;

-- 27 Display the date, product ID and sales where total expenses are between 100 to 200
select date,ProductId, sales from fact
where Total_Expenses >=100 AND Total_Expenses <=200;
-- 28 Delete the records in the Product Table for regular type
delete from product
where Product_type ='regular';
-- 29 Display the ASCII value of the fifth character from the columnProduct
SELECT ASCII(SUBSTRING(Product, 5, 1)) AS ASCII_Value
FROM product
WHERE Product IS NOT NULL
   AND LEN(Product) >= 5;